plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(y = decision, x = gifted$fatheriq, col = "blue")
par(new=TRUE)
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]),
col = "green",
type = "l")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(y = decision, x = gifted$fatheriq, col = "blue")
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]),
col = "green",
type = "l", add=TRUE)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(y = decision, x = gifted$fatheriq, col = "blue")
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), add=TRUE,
col = "green",
type = "l")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(y = decision, x = gifted$fatheriq, col = "blue")
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), add=TRUE,
col = "green",
type = "l")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(y = decision, x = gifted$fatheriq, col = "blue")
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1] + 40), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1] + 50), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1] + 60), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
lines(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1] + 70), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1] + 70), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
plot(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
points(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
lines(y = decision, x = gifted$fatheriq, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), col="green")
lines(x = gifted$fatheriq, y = decision, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green")
lines(x = gifted$fatheriq, y = decision, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
lines(x = gifted$fatheriq, y = decision, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
lines(x = gifted$fatheriq, y = decision, col = "blue")
points(
x = c(0, n1),
y = rep(decision.mean.model2error, 2),
type = "l",
col = "blue"
)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
lines(x = gifted$fatheriq, y = decision, col = "blue")
points(
x = c(0, n1),
y = rep(decision.mean.model2error, 2),
type = "l",
col = "blue"
)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(
x = c(0, n1),
y = rep(decision.mean.model2error, 2),
type = "l",
col = "blue"
)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(
x = gifted$fatheriq,
y = rep(decision.mean.model2error, 2),
type = "l",
col = "blue"
)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
print(best_model_coefs[2])
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(
x = gifted$fatheriq,
y = gifted$fatheriq,
type = "l",
col = "blue"
)
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(y = decision, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(x = gifted$fatheriq, y = decision, col = "blue")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
library(leaps)
library(openintro)
?gifted
data(gifted)
data = gifted[,-1]
decision = gifted$score
summary(data)
nvmax = dim(data)[2]
manyModels=regsubsets(x = decision~., data = data, nvmax = nvmax)
results = summary(manyModels)
results
library(leaps)
library(openintro)
?gifted
data(gifted)
data = gifted[,-1]
decision = gifted$score
summary(data)
nvmax = dim(data)[2]
manyModels=regsubsets(x = decision~., data = data, nvmax = nvmax)
results = summary(manyModels)
results
print("Wartości R^2 dla kolejnych modeli:")
results$rsq
print("Wartości Adjusted R^2 dla kolejnych modeli:")
results$adjr2
plot(manyModels, scale = "r2")
plot(manyModels, scale = "adjr2")
#max(results$adjr2)
thebestmodel = which.max(results$adjr2)
best_model_coefs = coef(manyModels, thebestmodel)
plot(x = gifted$fatheriq, y = c(best_model_coefs[2] * gifted$fatheriq + best_model_coefs[1]), type="l", col="green", ylab = "score")
points(x = gifted$fatheriq, y = decision, col = "blue")
library(ISLR)
data(Auto)
summary(Auto)
train.size = 0.8
n = 100
descriptor = Auto$weight
decision = Auto$acceleration
hist(descriptor, xlab="vehicle weight")
hist(decision, xlab="acceleration")
A0 = array(dim = n) #wektory na współczynniki modelu
A1 = array(dim = n)
decision.modelerror = array(dim = n)
for (i in seq(n)) {
train.idx = sample(dim(Auto)[1], dim(Auto)[1] * train.size)
decision.model1 = glm(formula = decision ~ descriptor, subset = train.idx)
#zapisanie współczynników
A0[i] = coef(decision.model1)[1]
A1[i] = coef(decision.model1)[2]
decision.modelerror[i] = mean((decision[-train.idx] - (A0[i] + A1[i] * descriptor[-train.idx])) ^ 2)
}
plot(y = decision, x = descriptor, col = "gray", xlab="vehicle weight", ylab="acceleration")
for (i in seq(n)) {
points(
x = c(0, max(descriptor)),
y = c(A0[i], (max(descriptor) * A1[i] + A0[i])),
col = "green",
type = "l"
)
}
A0.mean = mean(A0)
A1.mean = mean(A1)
points(
x = c(0, max(descriptor)),
y = c(A0.mean, (max(descriptor) * A1.mean + A0.mean)),
col = "red",
type = "l"
)
decision.mean.modelerror = mean((decision - (A0.mean + A1.mean * descriptor)) ^ 2)
decision.mean.modelerror
plot(decision.modelerror, col = "purple", ylab = "Błędy modeli")
points(
x = c(0, n),
y = rep(decision.mean.modelerror, 2),
type = "l",
col = "blue"
)
n.worse = sum(decision.modelerror > decision.mean.modelerror)
sprintf("model średni lepszy od %d modeli z %d", n.worse, n)
data(Auto)
idx=sample(dim(Auto)[1])
n1 = length(idx)
hist(Auto$horsepower, xlab="horse power")
hist(Auto$mpg, xlab="miles per gallon")
descriptor = Auto$horsepower
decision = Auto$mpg
A0_1 = array(dim = n1)
A1_1 = array(dim = n1)
decision.model1error = array(dim = n1)
for (i in seq(n1)) {
decision.model1 = glm(formula = decision[-i] ~ descriptor[-i])
A0_1[i] = coef(decision.model1)[1]
A1_1[i] = coef(decision.model1)[2]
decision.model1error[i] = mean((decision[i] - (A0_1[i] + A1_1[i] * descriptor[i])) ^ 2)
}
k = 10
hist(Auto$horsepower, xlab="horse power")
hist(Auto$mpg, xlab="miles per gallon")
descriptor = Auto$horsepower
decision = Auto$mpg
A0_2 = array(dim = k)
A1_2 = array(dim = k)
decision.model2error = array(dim = k)
for (i in seq(k)) {
fold=idx[((i-1) * floor(dim(Auto)[1]/k)+1):(i * floor(dim(Auto)[1]/k))]
decision.model2 = glm(formula = decision[-fold] ~ descriptor[-fold])
A0_2[i] = coef(decision.model2)[1]
A1_2[i] = coef(decision.model2)[2]
decision.model2error[i] = mean((decision[fold] - (A0_2[i] + A1_2[i] * descriptor[fold])) ^ 2)
}
plot(y = decision, x = descriptor, col = "gray")
for (i in seq(n1)) {
points(
x = c(0, n1),
y = c(A0_1[i], (n1 * A1_1[i] + A0_1[i])),
col = "green",
type = "l"
)
}
A0_1.mean = mean(A0_1)
A1_1.mean = mean(A1_1)
points(
x = c(0, n1),
y = c(A0_1.mean, (n1 * A1_1.mean + A0_1.mean)),
col = "red",
type = "l"
)
# Wypisanie błędu
decision.mean.model1error = mean((decision - (A0_1.mean + A1_1.mean * descriptor)) ^ 2)
decision.mean.model1error
plot(decision.model1error, col = "purple", ylab = "Błędy modeli")
points(
x = c(0, n1),
y = rep(decision.mean.model1error, 2),
type = "l",
col = "blue"
)
n1.worse = sum(decision.model1error > decision.mean.model1error)
sprintf("model średni lepszy od %d modeli z %d", n1.worse, n1)
plot(y = decision, x = descriptor, col = "gray")
for (i in seq(n1)) {
points(
x = c(0, n1),
y = c(A0_2[i], (n1 * A1_2[i] + A0_2[i])),
col = "green",
type = "l"
)
}
A0_2.mean = mean(A0_2)
A1_2.mean = mean(A1_2)
points(
x = c(0, n1),
y = c(A0_2.mean, (n1 * A1_2.mean + A0_2.mean)),
col = "red",
type = "l"
)
# Wypisanie błędu
decision.mean.model2error = mean((decision - (A0_2.mean + A1_2.mean * descriptor)) ^ 2)
decision.mean.model2error
plot(decision.model2error, col = "purple", ylab = "Błędy modeli")
points(
x = c(0, n1),
y = rep(decision.mean.model2error, 2),
type = "l",
col = "blue"
)
n1.worse = sum(decision.model2error > decision.mean.model2error)
sprintf("model średni lepszy od %d modeli z %d", n1.worse, k)
library(boot)
decision.model1 = glm(mpg ~ horsepower, data = Auto)
# leave one out
cv.err = cv.glm(Auto, decision.model1)
cv.err$delta[1]
# k-fold cross-validation
k = 10
cv.error.10 = cv.glm(Auto, decision.model1, K = k)
cv.error.10$delta[1]
